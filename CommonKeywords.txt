*** Settings ***
Library           SeleniumLibrary
Library           userdata.py
Library           XML
Library           OperatingSystem
Library           String
Library           DateTime

*** Variables ***
${VALIDEMAIL}     support@ngendigital.com
${VALIDPASSWORD}    abc123
${DEMOAPPLICATIONURL}    https://ngendigital.com/demo-application
${BROWSER}        chrome


@{cities}
${Response}       Toronto Chicago New York London


${Response2}      Paris Tokyo Mumbai Atlanta



@{class}
${verifyclass}    Economy Business First


${Date1}          20.06.2019
${Date2}          28.06.2019

*** Keywords ***
Object On Page
    [Documentation]    Verify that page contains elements: email + passwork input fields, SignIn + SignOut buttons, "Click Here" + "Forgot your password?" texts.
    Page Should Contain Element    //div[@class='box']//h1[contains(text(),'My Account')]
    Page Should Contain Element    //input[@name='email']
    Page Should Contain Element    //input[@name='passwd']
    Page Should Contain Element    //div[@name='SignIn']
    Page Should Contain Element    //div[@id='btn2']
    Page Should Contain Element    //u[contains(text(),'Click Here!')]
    Page Should Contain Element    //p[contains(text(),'Forgot your password?')]

Change To Iframe
    [Documentation]    Select iFrame
    SelectFrame    //iframe[contains(@id, 'iframe-')]

Invalid Email Format
    [Documentation]    Verify that "Invalid email format" text is shown when loged using invalid email format.
    Wait Until Keyword Succeeds    2    1    Input Text    //input[@name='email']    support.ngendigital.com
    Wait Until Keyword Succeeds    2    1    Input Text    //input[@name='passwd']    ${VALIDPASSWORD}
    Wait Until Keyword Succeeds    2    1    Click Element    //div[@name='SignIn']
    ${text1}    Get Text    //div[@id='InvalidLogin']/p/label/font
    Log    ${text1}
    Element Should Contain    //div[@id='InvalidLogin']/p/label/font    ${text1}

Invalid Password
    [Documentation]    Verify that "Invalid username/password" text is shown when loged using invalid password.
    Wait Until Keyword Succeeds    2    1    InputText    //input[@name='email']    ${VALIDEMAIL}
    ${password}    userdata.pswd
    Log    ${password}
    Wait Until Keyword Succeeds    2    1    InputText    //input[@name='passwd']    ${password}
    Wait Until Keyword Succeeds    2    1    Click Element    //div[@name='SignIn']
    ${text1}    Get Text    //div[@id='InvalidLogin']/p/label/font
    Log    ${text1}
    Element Should Contain    //div[@id='InvalidLogin']/p/label/font    ${text1}

Login
    [Documentation]    Login
    Wait Until Keyword Succeeds    2    1    InputText    //input[@name='email']    ${VALIDEMAIL}
    Wait Until Keyword Succeeds    2    1    InputText    //input[@name='passwd']    ${VALIDPASSWORD}
    Wait Until Keyword Succeeds    2    1    Click Element    //div[@name='SignIn']

Verify After Login
    [Documentation]    Verification after login
    Page Should Contain Element    //button[contains(text(),'Search Flights')]
    Page Should Contain Element    //button[contains(text(),'Manage Booking')]
    Page Should Contain Element    //button[contains(text(),'Check in')]
    Page Should Contain Element    //button[contains(text(),'Log out')]

Go To Home Page
    [Documentation]    Open Flight Application URL
    Open Browser    ${DEMOAPPLICATIONURL}    ${BROWSER}

Validation Manage Booking
    [Documentation]    Validate Manage Booking page elements
    Set Selenium Implicit Wait    1
    Sleep    2
    Wait Until Keyword Succeeds    2    1    Click Element    //button[contains(text(),'Manage Booking')]
    Wait Until keyword Succeeds    2    1    Page Should Contain List    xpath://select[@id='FromCity']
    Wait Until Keyword Succeeds    2    1    Page Should Contain List    xpath://select[@id='ToCity']
    Wait Until Page Contains Element    xpath://input[@id='goDate']    2    Page does not contain date element
    Wait Until Page Contains Element    xpath://input[@id='returnDate']    2    Page does not contain date element
    Wait Until Keyword Succeeds    2    1    Page Should Contain List    xpath://select[@id='Class']
    Wait Until Keyword Succeeds    2    1    Page Should Contain Checkbox    xpath://input[@name='roundtrip']
    Wait Until Keyword Succeeds    2    1    Page Should Contain Radio Button    xpath://input[@value='flight']
    Wait Until Keyword Succeeds    2    1    Page Should Contain Radio Button    xpath://input[@value='flighthotel']

ValidateFromCity
    [Documentation]    Validate FromCity list items
    @{cities}    Get List Items    xpath://select[@id='FromCity']
    FOR    ${city}    IN    @{cities}
        Should Contain    ${Response}    ${city}
        Log    City value is: ${city}
    END

Validate To City
    [Documentation]    Validate ToCity list items
    @{cities}    Get List Items    xpath://select[@id='ToCity']
    FOR    ${city}    IN    @{cities}
        Should Contain    ${Response2}    ${city}
        Log    City value is: ${city}
    END

ValidateClass
    [Documentation]    Validate Class list items
    @{class}    Get List Items    xpath://select[@id='Class']
    FOR    ${eachclass}    IN    @{class}
        Should Contain    ${verifyclass}    ${eachclass}
        Log    Class value is: ${eachclass}
    END

Radio Button Validation
    [Documentation]    Validate Flight and Flight + Hotel radio buttons
    Radio Button Should Not Be Selected    flight
    Select Radio Button    flight    flight
    Run Keyword And Expect Error    STARTS:Selection of radio button    Radio Button Should Be Set To    flight    flighthotel

Book First Fare Flight
    [Documentation]    Book first class flight
    Set Selenium Speed    0.5
    List Selection Should Be    xpath://select[@id='FromCity']    Toronto
    List Selection Should Be    xpath://select[@id='ToCity']    Paris
    Input Text    xpath://input[@id='goDate']    ${Date1}
    Input Text    xpath://input[@id='returnDate']    ${Date2}
    Wait Until Keyword Succeeds    2    1    Select From List By Index    xpath://select[@id='Class']    2
    Select Radio Button    flight    flight
    Click Button    xpath://button[normalize-space()='Get Fare']
    Click Element    xpath://div[@id='FareFirst']//tbody/tr[4]/td[4]
    Click Button    xpath://div[@id='FareFirst']//button[@id='confirm']
    Page Should Contain    SUCCESS !! Your flight is booked

Book Economy Flight
    [Documentation]    Book economy class flight
    Set Selenium Speed    0.5
    Select From List By Index    xpath://select[@id='FromCity']    0
    Select From List By Index    xpath://select[@id='ToCity']    0
    Input Text    xpath://input[@id='goDate']    ${Date1}
    Input Text    xpath://input[@id='returnDate']    ${Date2}
    Wait Until Keyword Succeeds    2    1    Select From List By Index    xpath://select[@id='Class']    0
    Select Radio Button    flight    flight
    Click Button    xpath://button[normalize-space()='Get Fare']
    Click Element    xpath://div[@id='Fare']//tbody/tr[4]/td[4]
    Click Button    xpath://div[@id='Fare']//button[@id='confirm']
    Page Should Contain    SUCCESS !! Your flight is booked


Book Business Flight
    [Documentation]    Book business class flight
    Set Selenium Speed    0.5
    Select From List By Index    xpath://select[@id='FromCity']    2
    Select From List By Index    xpath://select[@id='ToCity']    3
    Input Text    xpath://input[@id='goDate']    ${Date1}
    Input Text    xpath://input[@id='returnDate']    ${Date2}
    Select Checkbox    xpath://input[@name='roundtrip']
    Wait Until Keyword Succeeds    2    1    Select From List By Index    xpath://select[@id='Class']    1
    Select Radio Button    flight    flight
    Click Button    xpath://button[normalize-space()='Get Fare']
    Click Element    xpath://div[@id='FareBus']//tbody/tr[4]/td[4]
    Click Button    xpath://div[@id='FareBus']//button[@id='confirm']
    Page Should Contain    SUCCESS !! Your flight is booked
